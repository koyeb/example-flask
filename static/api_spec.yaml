openapi: 3.1.0
info:
  title: Hello World API
  description: A simple API to return a Hello World message
  version: "1.0"
servers:
  - url: https://sharp-moria-avon18-b017b82a.koyeb.app/
paths:
  /:
    get:
      summary: Returns a Hello World message
      operationId: helloWorld
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, World!"
        401:
          description: Unauthorized access
  /tariff:
    get:
      summary: Calculate and return a future start time when the appliance should start in order to minimize energy cost
      operationId: cheapestStartTime
      parameters:
        - in: query
          name: numHours
          schema:
            type: integer
          required: true
          description: Number of hours of the appliance going to run for 
      responses:
        200:
          description: Successful response with the future start time
          content:
            application/json:
              schema:
                type: object
                properties:
                  startTime:
                    type: string
                    example: "2024-08-10 17:00:00"
        400:
          description: Bad request response when input validation fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "numHours parameter is required"
        401:
          description: Unauthorized access
  /demo_status:
    get:
      summary: Returns the status of connections
      operationId: demoStatus
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [FIX, MQ, SFTP, ALL]
          required: true
          description: The type of connection to check
      responses:
        200:
          description: Successful response confirming all connections are up
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All your connections are up and running"
        400:
          description: Bad request response when input validation fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid connection type. Allowed values are FIX, MQ, SFTP, ALL."
  /demo_details:
    get:
      summary: Returns the details of a specific connection
      operationId: demoDetails
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: The ID of the connection to check
      responses:
        200:
          description: Successful response with connection details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Connection 123 is up"
                  lastConnectionTime:
                    type: string
                    format: date-time
                    example: "2025-01-08T12:00:00Z"
        400:
          description: Bad request response when input validation fails
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID parameter is required"
